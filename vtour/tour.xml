<krpano version="1.19" title="Virtual Tour">
	<include url="skin/vtourskin.xml" />

	<!-- customize skin settings: maps, gyro, webvr, thumbnails, tooltips, layout, design, ... -->
	<skin_settings 
		maps="false"
		maps_type="bing"
		maps_bing_api_key=""
		maps_zoombuttons="false"
		gyro="true"
		webvr="true"
		littleplanetintro="false"
		title="true"
		thumbs="true"
		thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop="0|40|240|160"
		thumbs_opened="false"
		thumbs_text="false"
		thumbs_dragging="true"
		thumbs_onhoverscrolling="false"
		thumbs_scrollbuttons="false"
		thumbs_scrollindicator="false"
		thumbs_loop="false"
		tooltips_buttons="false"
		tooltips_thumbs="false"
		tooltips_hotspots="false"
		tooltips_mapspots="false"
		deeplinking="false"
		loadscene_flags="MERGE"
		loadscene_blend="OPENBLEND(0.5, 0.0, 0.75, 0.05, linear)"
		loadscene_blend_prev="SLIDEBLEND(0.5, 180, 0.75, linear)"
		loadscene_blend_next="SLIDEBLEND(0.5,   0, 0.75, linear)"
		loadingtext="loading..."
		layout_width="100%"
		layout_maxwidth="814"
		controlbar_width="-24"
		controlbar_height="40"
		controlbar_offset="20"
		controlbar_offset_closed="-40"
		controlbar_overlap.no-fractionalscaling="10"
		controlbar_overlap.fractionalscaling="0"
		design_skin_images="vtourskin.png"
		design_bgcolor="0x2D3E50"
		design_bgalpha="0.8"
		design_bgborder="0"
		design_bgroundedge="1"
		design_bgshadow="0 4 10 0x000000 0.3"
		design_thumbborder_bgborder="3 0xFFFFFF 1.0"
		design_thumbborder_padding="2"
		design_thumbborder_bgroundedge="0"
		design_text_css="color:#FFFFFF; font-family:Arial;"
		design_text_shadow="1"
    />

	<!-- startup action - load the first scene -->
	<action name="startup" autorun="onstart">
		showlog(true);
		if(startscene === null OR !scene[get(startscene)], copy(startscene,scene[0].name); );
		loadscene(get(startscene), null, MERGE);
		if(startactions !== null, startactions() );
		createGifs();
	</action>

	<action name="createGifs">
 		<!-- Set up the sunset GIF -->
		set(originalHotspotName, "SunsetUI");
		set(imageName, "skin/NewSunset/TIMELAPSE_UI_2_00020.png");
		createGifHotspots(get(originalHotspotName), get(imageName), 460, 280, 736, 650, 1536, 0, 0, "true");
 
		set(hotspotName2, "OtherSunsetUI");
		createGifHotspots(get(hotspotName2), get(imageName), 460, 280, 736, 650, 1536, 0, 0, "true");

		<!-- Set up the visit the office GIF -->
		set(officeHotspotName, "OfficeUI");
		set(officeImageName, "skin/VisitOfficeRedesign/MAIN_UI_00020.png");
		createGifHotspots(get(officeHotspotName), get(officeImageName), 100, 620, 372, 460, 1536, 0, 0, "true");

		set(officeHotspotName2, "OfficeUI2");
		createGifHotspots(get(officeHotspotName2), get(officeImageName), 100, 620, 372, 460, 1536, 0, 0, "true");

 		set(imageNameArray[0].value, "skin/NewSunset/TIMELAPSE_UI_2_000");
 		set(imageNameArray[1].value, "skin/VisitOfficeRedesign/MAIN_UI_000");

 		set(hotspotNameArray[0].value, get(originalHotspotName));
 		set(hotspotNameArray[1].value, get(officeHotspotName));

 		set(altHotspotNameArray[0].value, get(hotspotName2));
 		set(altHotspotNameArray[1].value, get(officeHotspotName2));

 		set(frameIndexArray[0].value, get(oneInteger));
 		set(frameIndexArray[1].value, get(oneInteger));

 		set(maxFrameIndexArray[0].value, 45);
 		set(maxFrameIndexArray[1].value, 81);

		hotspot_animate(get(imageURLNames), get(hotspotNames), get(altHotspotNames), get(frameIndices), get(maxFrameIndices), 0);
	</action>

 	<action name="hotspot_animate">
 		set(imageSwitchBool, %6);

 		for (set(hotspotIndex, 0), hotspotIndex LT imageNameArray.count, inc(hotspotIndex),

			set(theImageName, get(imageNameArray[get(hotspotIndex)].value));
			set(frameIndex, get(frameIndexArray[get(hotspotIndex)].value));
			set(maxFrameIndex, get(maxFrameIndexArray[get(hotspotIndex)].value));
			set(firstHotspotName, get(hotspotNameArray[get(hotspotIndex)].value));
			set(secondHotspotName, get(altHotspotNameArray[get(hotspotIndex)].value));

			<!-- If the frame index is less than ten, add a 0 onto the image name -->
			if(frameIndex LT 10, txtadd(theImageName, get(theImageName), "0"););
			txtadd(theImageName, get(theImageName), get(frameIndex), ".png");

			<!--
			Determine which image is going to be visible this frame based
			on the image switch bool
			-->
			set(oneVisible, "false");
			set(twoVisible, "false");

			if (imageSwitchBool == 1
			,
			set(oneVisible, "true");
			set(hotspot[get(secondHotspotName)].url, get(theImageName));
			,
			set(twoVisible, "true");
			set(hotspot[get(firstHotspotName)].url, get(theImageName));
			);

			set(hotspot[get(firstHotspotName)].visible, get(oneVisible));
			set(hotspot[get(secondHotspotName)].visible, get(twoVisible));

			<!-- Increment the frame index but cap it by the max number of frames -->
			add(frameIndex, 1);
			if(frameIndex GT maxFrameIndex, set(frameIndex, 1));

			set(frameIndexArray[get(hotspotIndex)].value, get(frameIndex));
 		);

 		<!-- Swap the image switch bool -->
		if (imageSwitchBool == 1
			,
			set(imageSwitchBool, 0);
			,
			set(imageSwitchBool, 1);
		);

		delayedcall(0.05, hotspot_animate(%1, %2, %3, %4, %5, get(imageSwitchBool)) );
	</action>

	<action name="createGifHotspots">
		set(hotspotName, %1);
		set(imageName, %2);
		set(xPosition, %3);
		set(yPosition, %4);
		set(width, %5);
		set(height, %6);
		set(originalCubeSize, %7);
		set(ath, %8);
		set(atv, %9);
		set(visibility, %10);

		<!-- Calculate the width/height of the hotspot -->
		mul(width, 1000);
		div(width, get(originalCubeSize));

		mul(height, 1000);
		div(height, get(originalCubeSize));

		<!-- Calculate the X and Y Position of the hotspot -->
		mul(xPosition, 1000);
		div(xPosition, get(originalCubeSize));
		sub(xPosition, 500);

		mul(yPosition, 1000);
		div(yPosition, get(originalCubeSize));
		sub(yPosition, 500);

		<!-- Create the hotspot -->
		addhotspot(get(hotspotName));
		set(hotspot[get(hotspotName)].url, get(imageName));
		set(hotspot[get(hotspotName)].ox, get(xPosition));
		set(hotspot[get(hotspotName)].oy, get(yPosition));
		set(hotspot[get(hotspotName)].ath, get(ath));
		set(hotspot[get(hotspotName)].atv, get(atv));
		set(hotspot[get(hotspotName)].distorted, "true");
		set(hotspot[get(hotspotName)].edge, "lefttop");
		set(hotspot[get(hotspotName)].capture, "false");
		set(hotspot[get(hotspotName)].visible, get(visibility));
		set(hotspot[get(hotspotName)].keep, "true");
		set(hotspot[get(hotspotName)].scale, "1.0");
		set(hotspot[get(hotspotName)].width, get(width));
		set(hotspot[get(hotspotName)].height, get(height));
	</action>
	
	<scene name="scene_pano" title="pano" onstart="" thumburl="panos/pano.tiles/thumb.jpg" lat="" lng="" heading="">
		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="panos/pano.tiles/preview.jpg" />

		<image>
			<cube url="panos/pano.tiles/pano_%s.jpg" />

			<cube url="panos/pano.tiles/mobile/pano_%s.jpg" devices="mobile" />
		</image>
	</scene>
</krpano>
